{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/Blog/BNW011 - Exploring OpenAI API and Pynecone","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"BNW011 - Exploring OpenAI API and Pynecone\",\n  \"date\": \"2023-03-13T00:00:00.000Z\",\n  \"tags\": [\"RSS\", \"Newsletter\", \"2023\"],\n  \"excerpt\": \"One day late again.\",\n  \"published\": true,\n  \"scheduled-for\": \"2023-03-12T00:00:00.000Z\",\n  \"stage\": \"DONE\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"bnw011---exploring-openai-api-and-pynecone\"\n  }, \"BNW011 - Exploring OpenAI API and Pynecone\"), mdx(\"p\", null, \"I'm tired of constantly refreshing and verifying that I am human. So I decided to build a local ChatGPT client. I had read about Pynecone, a Python full-stack web app development framework, a while ago and had always wanted to try it.\"), mdx(\"h2\", {\n    \"id\": \"using-cloudflare-workers-as-a-proxy\"\n  }, \"Using Cloudflare workers as a proxy\"), mdx(\"p\", null, \"I mainly followed this tutorial \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/noobnooc/noobnooc/discussions/9\"\n  }, \"\\u4F7F\\u7528 Cloudflare Workers \\u89E3\\u51B3 OpenAI \\u548C ChatGPT \\u7684 API \\u65E0\\u6CD5\\u8BBF\\u95EE\\u7684\\u95EE\\u9898 \\xB7 noobnooc/noobnooc \\xB7 Discussion #9\"), \" and bought a 99 cents domain from \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.namecheap.com/promos/99-cent-domain-names/\"\n  }, \"99 Cent Domain Name Registration | $1 Coupons - Namecheap\"), \". To add this domain to Cloudflare I just followed the instructions on the website. Later I found this guide \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.namecheap.com/support/knowledgebase/article.aspx/9607/2210/how-to-set-up-dns-records-for-your-domain-in-cloudflare-account/\"\n  }, \"How to set up DNS records for your domain in Cloudflare account - Hosting - Namecheap.com\"), \". The only tricky part for me was setting up the nameservers because I had never done that before. After that, I waited for about 15 minutes and the site became active.\"), mdx(\"h2\", {\n    \"id\": \"pynecone\"\n  }, \"Pynecone\"), mdx(\"p\", null, \"My expectation was that I could finish the simple client in 1 or 2 hours. But it actually took much longer.\"), mdx(\"p\", null, \"1.Python version\"), mdx(\"p\", null, \"I declared a class Diaglog to store role and content information. For each session, I have a dialogs variable with an array of Dialog objects. Python always gives me an error when I try to access \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dialog.role\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dialog.content\"), \". I tried to type annotate the dialogs variable with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"list[Dialog]\"), \". A different error. After several fruitless google searches, I suddenly realized that type hinting has changed since Python 3.10. My environment was Python 3.8. So I created a 3.11 environment and the error disappeared.\"), mdx(\"p\", null, \"2.Async?\"), mdx(\"p\", null, \"Pynecone's button component has an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"is_loading\"), \" field which is perfect for signaling the user \\\"Your input has been sent, please wait before an answer is returned\\\". However, when I tried to change the loading state by changing the boolean variable linked to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"is_loading\"), \", it doesn't work. I think it has something to do with blocking, sync, async? The fix is quite simple. Instead of putting everything in one function, have separate functions and chain them together.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"pc.button(\\n    \\\"Send\\\",\\n    bg=\\\"lightblue\\\",\\n    color=\\\"black\\\",\\n    is_loading=State.is_loading,\\n    on_click=[State.toggle_loading, State.send_message, State.toggle_loading, State.clear_input_text],\\n),\\n\")), mdx(\"p\", null, \"I like Pynecone a lot but I need to read the document closely before I build anything serious with it.\"), mdx(\"h2\", {\n    \"id\": \"next-steps\"\n  }, \"Next Steps\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The cursor moves to the end whenever I make changes in the input. And the input does not work with Chinese pinyin input. Have to figure out what to do with that.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Can I pack the program into an executable with PyInstaller or something similar?\")), mdx(\"hr\", null), mdx(\"h1\", {\n    \"id\": \"-book\"\n  }, \"\\uD83D\\uDCDA Book\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://amzn.to/3lafa9y\"\n  }, \"168 Hours\")), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T2/images/I/51fqA1WvlrL.jpg\",\n    \"alt\": \"CA | 300\"\n  })), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"There are 168 hours in a week. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Most people have false beliefs about how much time they spend working and how much time they relax and spend on activities such as watching TV. Before making decisions about time, keep a record of how you actually spend your day and week first.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Record, Analyze, Prioritize, Outsource, and Improve.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If you want to use your time efficiently, plan ahead. Plan your leisure time as well.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If you have read a dozen of time-management/productivity books, like me, there is nothing really new in this book.\")), mdx(\"hr\", null), mdx(\"h1\", {\n    \"id\": \"-bookmarks\"\n  }, \"\\uD83D\\uDD16 Bookmarks\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/cocktailpeanut/dalai?source=oliwang_betternextweek\"\n  }, \"cocktailpeanut/dalai: The simplest way to run LLaMA on your local machine\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Looks really simple. Have to try it sometime.\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://blog.frankzhao.cn/build_gpt_bot_for_doc/?source=oliwang_betternextweek\"\n  }, \"\\u5982\\u4F55\\u7528 ChatGPT \\u6784\\u5EFA\\u4F60\\u7684\\u4E13\\u5C5E\\u77E5\\u8BC6\\u95EE\\u7B54\\u673A\\u5668\\u4EBA\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I have been thinking about how to provide detailed descriptions in prompt while keeping my token number below the limit. Maybe I should try fine-tuning text-davinci-003 first?\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/jerryjliu/llama_index?source=oliwang_betternextweek\"\n  }, \"jerryjliu/llama_index: LlamaIndex (GPT Index) is a project that provides a central interface to connect your LLM's with external data.\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Or maybe I can try GPT-index?\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.nytimes.com/2023/03/08/opinion/noam-chomsky-chatgpt-ai.html?source=oliwang_betternextweek\"\n  }, \"Noam Chomsky: The False Promise of ChatGPT\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Many people are excited to ask ChatGPT questions and find out what it \\\"thinks\\\" because of the name \\\"artificial intelligence.\\\" However, it's important to remember that ChatGPT doesn't actually think. When you ask questions like \\\"how will AI develop?\\\" The answers you receive are generated by statistical analysis of data gathered from pre-written posts made by people.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Is \\\"true intelligence\\\" limited to \\\"human intelligence\\\"? The first airplanes were inspired by birds, but modern aircraft have very different mechanisms for flying. Yet, they still fly. So, while true intelligence doesn't necessarily have to be human-like, it should still be able to accomplish tasks effectively.\")), mdx(\"hr\", null), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://tinyletter.com/oliwang\"\n  }, \"\\uD83D\\uDC8CSubscribe\"), \" and/or \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"mailto:betternextweek.bnw@gmail.com\"\n  }, \"\\uD83D\\uDCE7Email\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Blog\",\n  \"date\": \"2022-12-27T00:00:00.000Z\",\n  \"tags\": [],\n  \"excerpt\": \"Blog page\",\n  \"published\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"blog\"\n  }, \"Blog\"), mdx(\"h2\", {\n    \"id\": \"2023\"\n  }, \"2023\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/BNW011-Exploring-OpenAI-API-and-Pynecone\",\n    \"title\": \"BNW011 - Exploring OpenAI API and Pynecone\"\n  }, \"[[BNW011 - Exploring OpenAI API and Pynecone]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/BNW010-What-are-mathematicians-calculating\",\n    \"title\": \"BNW010 - What are mathematicians calculating\"\n  }, \"[[BNW010 - What are mathematicians calculating]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/BNW009-ChatGPT-and-Unstructured-data\",\n    \"title\": \"BNW009 - ChatGPT and Unstructured data\"\n  }, \"[[BNW009 - ChatGPT and Unstructured data]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/BNW008-First-Pull-Request-for-Open-Source-Project\",\n    \"title\": \"BNW008 - First Pull Request for Open Source Project\"\n  }, \"[[BNW008 - First Pull Request for Open Source Project]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/BNW007-Switched-my-Read-it-later-APP\",\n    \"title\": \"BNW007 - Switched my Read-it-later APP\"\n  }, \"[[BNW007 - Switched my Read-it-later APP]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/BNW006-Project-of-January-BooknoteWorthy\",\n    \"title\": \"BNW006 - Project of January BooknoteWorthy\"\n  }, \"[[BNW006 - Project of January BooknoteWorthy]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/BNW005-How-many-ToDo-APPs-do-I-need\",\n    \"title\": \"BNW005 - How many ToDo APPs do I need\"\n  }, \"[[BNW005 - How many ToDo APPs do I need]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/BNW004-Happy-Chinese-New-Year\",\n    \"title\": \"BNW004 - Happy Chinese New Year\"\n  }, \"[[BNW004 - Happy Chinese New Year]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/BNW003-One-size-does-not-fit-for-all-in-time-management\",\n    \"title\": \"BNW003 - One size does not fit for all in time management\"\n  }, \"[[BNW003 - One size does not fit for all in time management]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/How-to-use-Chinese-and-other-Non-Latin-Characters-in-jimp\",\n    \"title\": \"How to use Chinese and other Non-Latin Characters in jimp\"\n  }, \"[[How to use Chinese and other Non-Latin Characters in jimp]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/BNW002-Learning-more-about-economics\",\n    \"title\": \"BNW002 - Learning more about economics\"\n  }, \"[[BNW002 - Learning more about economics]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Book-Note-The-Psychology-of-Money\",\n    \"title\": \"Book Note - The Psychology of Money\"\n  }, \"[[Book Note - The Psychology of Money]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/BNW001-New-Year-New-Me-Newsletter-and-What-I-learned\",\n    \"title\": \"BNW001 - New Year, New Me, Newsletter and What I learned\"\n  }, \"[[BNW001 - New Year, New Me, Newsletter and What I learned]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"df2776be-056a-52a1-b106-eeabda7815d2","fields":{"slug":"/Blog","title":"Blog"}}}]},"fields":{"slug":"/Blog/BNW011 - Exploring OpenAI API and Pynecone","title":"BNW011 - Exploring OpenAI API and Pynecone"}}},"pageContext":{"id":"5d607e79-5cb9-5213-af9b-c21ab0a7bea5"}},"staticQueryHashes":["2098632890","2221750479","2468095761","4055016707","650872877"]}