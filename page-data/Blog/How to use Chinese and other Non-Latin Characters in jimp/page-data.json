{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/Blog/How to use Chinese and other Non-Latin Characters in jimp","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"How to use Chinese and other Non-Latin Characters in jimp\",\n  \"date\": \"2023-01-11T00:00:00.000Z\",\n  \"tags\": [\"develop\", \"code\", \"Blog\", \"node.js\", \"2023\", \"RSS\"],\n  \"excerpt\": \"I spent the whole afternoon figuring out how to use Chinese characters in Jimp. Here's how I did it.\",\n  \"published\": true,\n  \"scheduled-for\": \"2023-01-11T00:00:00.000Z\",\n  \"stage\": \"DONE\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"how-to-use-chinese-and-other-non-latin-characters-in-jimp\"\n  }, \"How to use Chinese and other Non-Latin Characters in jimp\"), mdx(\"p\", null, \"I followed \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://antran.app/2022/gatsby_seo_banner/\"\n  }, \"How to generate social media banners for Gatsby automatically? | An Tran\"), \" to automatically generate image for each of my blog posts with a module called \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/oliver-moran/jimp\"\n  }, \"jimp\"), \". It worked OK until I wrote a post in Chinese. The Chinese characters are printed as \\\"?\\\" on the image. I think the same would happen for the other non-latin languages.\"), mdx(\"p\", null, \"This seems like an easy problem to solve. Just load a font that supports Chinese characters.\"), mdx(\"p\", null, \"But if you have never used \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".fnt\"), \" fonts before, there's a lot of googling to find the solution. \"), mdx(\"hr\", null), mdx(\"h2\", {\n    \"id\": \"step-1-download-a-ttf-font\"\n  }, \"Step 1: Download a \", mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \".ttf\"), \" font\"), mdx(\"p\", null, \"This is the easy step. You can use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://fonts.google.com/\"\n  }, \"Google Fonts\"), \". I downloaded my Chinese font from \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.zcool.com.cn/special/zcoolfonts/\"\n  }, \"\\u7AD9\\u9177\\u5B57\\u5E93 - \\u4ED8\\u8D39\\u5B57\\u4F53 & \\u514D\\u8D39\\u5B57\\u4F53 - \\u7AD9\\u9177 (ZCOOL)\"), \".\"), mdx(\"h2\", {\n    \"id\": \"step-2-download-hiero\"\n  }, \"Step 2: Download Hiero\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://libgdx.com/wiki/tools/hiero\"\n  }, \"Hiero\"), \" is the program I used to convert \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".ttf\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".fnt\"), \". You can download the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".jar\"), \" file and double click on it to run (at least on a Mac). I tried various online tools because I thought I have to install dependencies and compile Java code in order to run Hiero. No, you just need to double click. None of the online tools I tried worked for Chinese fonts.\"), mdx(\"p\", null, \"Now you can choose the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".ttf\"), \" font you downloaded in previous step.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://imagehosting-ow.oss-cn-hangzhou.aliyuncs.com/202301111955327.png\",\n    \"alt\": \"Hiero\"\n  })), mdx(\"h2\", {\n    \"id\": \"step3-find-out-what-characters-are-in-the-font\"\n  }, \"Step3: Find out what characters are in the font\"), mdx(\"p\", null, \"If you directly export the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".fnt\"), \" file in step 2, you will see that only characters in sample text were exported. No Chinese characters. You have to add all characters you might use to sample text.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://imagehosting-ow.oss-cn-hangzhou.aliyuncs.com/202301112022999.png\",\n    \"alt\": \"Sample Text\"\n  })), mdx(\"p\", null, \"So the question becomes: how do I get all the characters? I know the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".ttf\"), \" file must have information about all the characters it supports, but how do I get them?\"), mdx(\"p\", null, \"I modified python code from \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://blog.csdn.net/Joseph__Lagrange/article/details/118021733\"\n  }, \"python\\u63D0\\u53D6ttf\\u6587\\u4EF6\\u5305\\u542B\\u7684\\u6240\\u6709\\u5B57\\u7B26_\\u6F58\\u65ED\\u9633\\u7684\\u535A\\u5BA2-CSDN\\u535A\\u5BA2_python \\u63D0\\u53D6ttf\\u5B57\\u4F53\\u4E2D\\u5B57\\u7B26\\u7684\\u5B57\\u6A21\\u4FE1\\u606F\"), \" a little bit, and saved the characters to my clipboard. Now I just need to paste them to sample text.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"from fontTools.ttLib import TTFont\\nimport subprocess \\ndata = \\\"\\\"\\n\\ndef get_char_list_from_ttf(font_file):\\n    f_obj = TTFont(font_file)\\n    m_dict = f_obj.getBestCmap()\\n    \\n    unicode_list = []\\n    for key, _ in m_dict.items():\\n        unicode_list.append(key)\\n        \\n    char_list = [chr(ch_unicode) for ch_unicode in unicode_list]\\n    return char_list\\n \\nfont_file = '\\u7AD9\\u9177\\u5E86\\u79D1\\u9EC4\\u6CB9\\u4F53.ttf'\\nchars = get_char_list_from_ttf(font_file)\\nfor i in range(len(chars)):\\n    if i%20 == 0:\\n        data += \\\"\\\\n\\\"\\n    data += chars[i]\\n\\nsubprocess.run(\\\"pbcopy\\\", text=True, input=data)\\n\")), mdx(\"h2\", {\n    \"id\": \"step-4-set-font-size-background-color-color\"\n  }, \"Step 4: Set font size, background color, color\"), mdx(\"p\", null, \"Background needs to be transparent. You can click on Background, choose RGB tab, set Alpha to 0, click OK.\"), mdx(\"p\", null, \"Set other effects if you need.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://imagehosting-ow.oss-cn-hangzhou.aliyuncs.com/202301112025485.png\",\n    \"alt\": \"Effects\"\n  })), mdx(\"h2\", {\n    \"id\": \"step-5-export-fnt-file\"\n  }, \"Step 5: Export \", mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \".fnt\"), \" file\"), mdx(\"p\", null, \"Click File - Save BMFont files. Give the file an appropriate name.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://imagehosting-ow.oss-cn-hangzhou.aliyuncs.com/202301112026837.png\",\n    \"alt\": \"Export\"\n  })), mdx(\"p\", null, \"If your language has thousands of characters like Chinese, you'll have to wait a little before all the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".png\"), \" files are generated. Put all \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".fnt\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".png\"), \" file to your project. Use it in jimp with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"loadFont()\"), \".\"), mdx(\"hr\", null), mdx(\"p\", null, \"Hope you find this Post helpful. \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://tinyletter.com/oliwang\"\n  }, \"\\uD83D\\uDC8CSubscribe\"), \" and/or \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"mailto:betternextweek.bnw@gmail.com\"\n  }, \"\\uD83D\\uDCE7Email\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Blog\",\n  \"date\": \"2022-12-27T00:00:00.000Z\",\n  \"tags\": [],\n  \"excerpt\": \"Blog page\",\n  \"published\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"blog\"\n  }, \"Blog\"), mdx(\"h2\", {\n    \"id\": \"2023\"\n  }, \"2023\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/BNW011-Exploring-OpenAI-API-and-Pynecone\",\n    \"title\": \"BNW011  - Exploring OpenAI API and Pynecone\"\n  }, \"[[BNW011  - Exploring OpenAI API and Pynecone]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/BNW010-What-are-mathematicians-calculating\",\n    \"title\": \"BNW010 - What are mathematicians calculating\"\n  }, \"[[BNW010 - What are mathematicians calculating]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/BNW009-ChatGPT-and-Unstructured-data\",\n    \"title\": \"BNW009 - ChatGPT and Unstructured data\"\n  }, \"[[BNW009 - ChatGPT and Unstructured data]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/BNW008-First-Pull-Request-for-Open-Source-Project\",\n    \"title\": \"BNW008 - First Pull Request for Open Source Project\"\n  }, \"[[BNW008 - First Pull Request for Open Source Project]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/BNW007-Switched-my-Read-it-later-APP\",\n    \"title\": \"BNW007 - Switched my Read-it-later APP\"\n  }, \"[[BNW007 - Switched my Read-it-later APP]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/BNW006-Project-of-January-BooknoteWorthy\",\n    \"title\": \"BNW006 - Project of January BooknoteWorthy\"\n  }, \"[[BNW006 - Project of January BooknoteWorthy]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/BNW005-How-many-ToDo-APPs-do-I-need\",\n    \"title\": \"BNW005 - How many ToDo APPs do I need\"\n  }, \"[[BNW005 - How many ToDo APPs do I need]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/BNW004-Happy-Chinese-New-Year\",\n    \"title\": \"BNW004 - Happy Chinese New Year\"\n  }, \"[[BNW004 - Happy Chinese New Year]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/BNW003-One-size-does-not-fit-for-all-in-time-management\",\n    \"title\": \"BNW003 - One size does not fit for all in time management\"\n  }, \"[[BNW003 - One size does not fit for all in time management]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/How-to-use-Chinese-and-other-Non-Latin-Characters-in-jimp\",\n    \"title\": \"How to use Chinese and other Non-Latin Characters in jimp\"\n  }, \"[[How to use Chinese and other Non-Latin Characters in jimp]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/BNW002-Learning-more-about-economics\",\n    \"title\": \"BNW002 - Learning more about economics\"\n  }, \"[[BNW002 - Learning more about economics]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Book-Note-The-Psychology-of-Money\",\n    \"title\": \"Book Note - The Psychology of Money\"\n  }, \"[[Book Note - The Psychology of Money]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/BNW001-New-Year-New-Me-Newsletter-and-What-I-learned\",\n    \"title\": \"BNW001 - New Year, New Me, Newsletter and What I learned\"\n  }, \"[[BNW001 - New Year, New Me, Newsletter and What I learned]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"df2776be-056a-52a1-b106-eeabda7815d2","fields":{"slug":"/Blog","title":"Blog"}}}]},"fields":{"slug":"/Blog/How to use Chinese and other Non-Latin Characters in jimp","title":"How to use Chinese and other Non-Latin Characters in jimp"}}},"pageContext":{"id":"97c29cf7-7ac9-5f9c-bf27-bbaa96359217"}},"staticQueryHashes":["2098632890","2221750479","2468095761","4055016707","650872877"]}